{"version":3,"sources":["constants/alert.constants.js","constants/user.constants.js","constants/data.constants.js","polyfill.js","App.js","serviceWorker.js","helpers/history.js","reducers/authentication.reducer.js","reducers/data.reducer.js","reducers/index.js","reducers/registration.reducer.js","reducers/alert.reducer.js","helpers/store.js","index.js"],"names":["alertConstants","SUCCESS","ERROR","VISIBLE","CLEAR","userConstants","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_RESET","UPDATE_REQUEST","UPDATE_SUCCESS","UPDATE_FAILURE","UPDATE_CAPTCHA","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","dataConstants","DATA_RESET","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","loading","className","DefaultLayout","Loadable","loader","Page404","Page500","App","$","ready","blur","this","val","addClass","removeClass","exact","path","name","component","Component","Boolean","location","hostname","match","createBrowserHistory","initialState","isLoginSuccess","isLoginPending","loginError","user","userData","human","signUp","rootReducer","combineReducers","authentication","state","action","type","Object","assign","latestAction","registration","registering","alert","message","visible","show","data","persistConfig","key","storage","persistedReducer","persistReducer","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","then","unregister"],"mappings":"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","file":"static/js/main.64169c25.chunk.js","sourcesContent":["export const alertConstants = {\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    VISIBLE: 'ALERT_VISIBLE',\r\n    CLEAR: 'ALERT_CLEAR',\r\n};\r\n","export const userConstants = {\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    LOGIN_RESET: 'USERS_LOGIN_RESET',\r\n\r\n    UPDATE_REQUEST: 'USERS_UPDATE_REQUEST',\r\n    UPDATE_SUCCESS: 'USERS_UPDATE_SUCCESS',\r\n    UPDATE_FAILURE: 'USERS_UPDATE_FAILURE',\r\n\r\n    UPDATE_CAPTCHA: 'USERS_UPDATE_CAPTCHA',\r\n\r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\r\n\r\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\r\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\r\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE'\r\n};\r\n","export const dataConstants = {\r\n\r\n    DATA_RESET: 'DATA_UPDATE_DATA_RESET',\r\n\r\n};\r\n","/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\nimport 'core-js'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React, { Component } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n// import { renderRoutes } from 'react-router-config';\r\nimport Loadable from 'react-loadable';\r\nimport $ from 'jquery';\r\nimport './App.scss';\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\n// Containers\r\nconst DefaultLayout = Loadable({\r\n  loader: () => import('./containers/DefaultLayout'),\r\n  loading\r\n});\r\n\r\n// Pages\r\nconst Page404 = Loadable({\r\n  loader: () => import('./views/Pages/Page404'),\r\n  loading\r\n});\r\n\r\nconst Page500 = Loadable({\r\n  loader: () => import('./views/Pages/Page500'),\r\n  loading\r\n});\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    $(document).ready(function() {\r\n      $('input').blur(function() {\r\n        // check if the input has any value (if we've typed into it)\r\n        if ($(this).val())\r\n          $(this).addClass('used');\r\n        else\r\n          $(this).removeClass('used');\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n          <Switch>\r\n            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n            <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\r\n          </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import { userConstants } from '../constants';\r\n\r\nconst initialState = {\r\n  isLoginSuccess: false,\r\n  isLoginPending: false,\r\n  loginError: null,\r\n  user: null,\r\n  userData: null,\r\n  human: true,\r\n  signUp: false,\r\n}\r\n\r\nexport function authentication(state = { initialState }, action) {\r\n  switch (action.type) {\r\n    case userConstants.LOGIN_RESET:\r\n      return Object.assign({}, state, initialState);\r\n    case userConstants.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoginPending: action.isLoginPending,\r\n        user: action.user,\r\n        isLoginSuccess: false,\r\n        loginError: null,\r\n      };\r\n    case userConstants.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoginSuccess: action.isLoginSuccess,\r\n        user: action.user,\r\n        userData: action.userData\r\n      };\r\n    case userConstants.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loginError: action.loginError,\r\n        user: action.user,\r\n        userData: action.userData\r\n      };\r\n    case userConstants.UPDATE_CAPTCHA:\r\n      return {\r\n        ...state,\r\n        human: action.human,\r\n        signUp: action.signUp,\r\n        latestAction: action.latestAction\r\n      }\r\n    case userConstants.LOGOUT:\r\n      return Object.assign({}, state, initialState);\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { dataConstants } from '../constants';\r\n\r\nconst initialState = {};\r\n\r\nexport function data(state = initialState, action) {\r\n  switch (action.type) {\r\n    case dataConstants.DATA_RESET:\r\n      return Object.assign({}, state, initialState);\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { authentication } from './authentication.reducer';\r\nimport { registration } from './registration.reducer';\r\nimport { alert } from './alert.reducer';\r\nimport { data } from './data.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  authentication,\r\n  registration,\r\n  alert,\r\n  data\r\n});\r\n\r\nexport default rootReducer;\r\n","import { userConstants } from '../constants';\r\n\r\nexport function registration(state = {}, action) {\r\n  switch (action.type) {\r\n    case userConstants.REGISTER_REQUEST:\r\n      return { registering: true };\r\n    case userConstants.REGISTER_SUCCESS:\r\n      return {};\r\n    case userConstants.REGISTER_FAILURE:\r\n      return {};\r\n    default:\r\n      return state\r\n  }\r\n}\n","import { alertConstants } from '../constants';\r\n\r\nexport function alert(state = {}, action) {\r\n  switch (action.type) {\r\n    case alertConstants.SUCCESS:\r\n      return {\r\n        ...state,\r\n        type: 'alert-success',\r\n        message: action.message\r\n      };\r\n    case alertConstants.ERROR:\r\n      return {\r\n        ...state,\r\n        type: 'alert-danger',\r\n        message: action.message\r\n      };\r\n    case alertConstants.VISIBLE:\r\n      return {\r\n        ...state,\r\n        visible: action.show\r\n      };\r\n    case alertConstants.CLEAR:\r\n      return {};\r\n    default:\r\n      return state\r\n  }\r\n}\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../reducers';\r\n// configureStore.js\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst loggerMiddleware = createLogger();\n\r\nconst store = createStore(persistedReducer, applyMiddleware(\r\n  thunkMiddleware,\r\n  loggerMiddleware\r\n));\r\nconst persistor = persistStore(store)\r\nexport { store, persistor }\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\r\nimport 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport './polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './helpers';\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}